#ifndef MAGNETOMETER_H#define MAGNETOMETER_H#include <stdint.h>#include "fixmath.h"#include "fixmatrix.h"#define MAX_SAMPLES 50#define MAX_MAG_VALUE_XY F16(1.0f/((1<<13)-1))#define MAX_MAG_VALUE_Z F16(1.0f/((1<<15)-1))typedef union {  struct {    fix16_t x;    fix16_t y;    fix16_t z;  };  fix16_t arr[3];} uvector_t;extern fix16_t mHIcomp[3]; // Hard-Iron compensation vectorextern fix16_t mSIcomp[3][3]; // Soft-Iron compensation matrix (rotation + scale)uvector_t getBf(void);void setBp_setBf(uint16_t x, uint16_t y, uint16_t z);void R_mpy(fix16_t *dest, const fix16_t *a, const fix16_t (*b)[3]);void correct_offset(fix16_t *dest, const fix16_t *offset);void calibrationStateMachine(void);#define TESTDATAuvector_t BpCollect[MAX_SAMPLES];#endif // MAGNETOMETER_H